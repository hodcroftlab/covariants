name: "build app"
inputs:
  deploy_environment:
    description: "deploy environment"
    required: true

runs:
  using: "composite"
  steps:
    - name: "[build] Setup environment (${{ inputs.deploy_environment }})"
      run: |
        echo "[build] Setup environment (${{ inputs.deploy_environment }})"
        echo "ENV_NAME=${{ inputs.deploy_environment }}" >> $GITHUB_ENV
        echo "FULL_DOMAIN=https://covariants.org" >> $GITHUB_ENV
        SUBDOMAIN=$( case ${{ inputs.deploy_environment }} in  "staging" | "master")  echo "${{ inputs.deploy_environment }}.";;   *) echo "";; esac )
        echo "PLAUSIBLE_IO_DOMAIN=${SUBDOMAIN}covariants.org" >> $GITHUB_ENV
      shell: bash

    - name: "[build] Setup Node.js"
      uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"
        cache: "yarn"
        cache-dependency-path: "web/yarn.lock"

    - name: "[build] Setup cache for web app"
      uses: actions/cache@v4
      with:
        path: |
          web/.cache
          web/.build/production/tmp/cache
        key: cache-v1-web-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          cache-v1-web-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          cache-v1-web-${{ runner.os }}-

    - name: "[build] Prepare .env file"
      run: |
        echo "[build] Prepare .env file"
        cd web/
        cp .env.example .env
        sed -i -e "s|FULL_DOMAIN=autodetect|FULL_DOMAIN=${FULL_DOMAIN}|g" .env
      shell: bash

    - name: "[build] Install Node.js packages"
      run: |
        echo "[build] Install Node.js packages"
        cd web
        yarn install --frozen-lockfile
      shell: bash

    - name: "[build] Build web application"
      run: |
        echo "[build] Build web application"
        cd web
        yarn prod:build
      shell: bash
